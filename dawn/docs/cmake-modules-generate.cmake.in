##===------------------------------------------------------------------------------*- CMake -*-===##
##                         _____                        _
##                        / ____|                      (_)
##                       | (___   ___  __ _ _   _  ___  _  __ _
##                        \___ \ / _ \/ _` | | | |/ _ \| |/ _` |
##                        ____) |  __/ (_| | |_| | (_) | | (_| |
##                       |_____/ \___|\__, |\__,_|\___/|_|\__,_| - Game Engine (2016-2017)
##                                       | |
##                                       |_|
##
## This file is distributed under the MIT License (MIT).
## See LICENSE.txt for details.
##
##===------------------------------------------------------------------------------------------===##

# This script automagically finds all the scripts in <dawn>/cmake/modules directory, copies them in
# the source tree and generates a corresponding .rst file

set(project_root @PROJECT_ROOT@)
set(sphinx_root @SPHINX_ROOT@)

# Copy the scripts from <dawn>/cmake/modules
file(COPY ${project_root}/cmake/modules/ DESTINATION ${sphinx_root}/cmake-modules)
file(GLOB scripts "${sphinx_root}/cmake-modules/*.cmake")
list(SORT scripts)

# Generate the *.rst
foreach(script ${scripts})
  get_filename_component(script_name ${script} NAME_WE)
  message(STATUS "Configuring ${script_name}")

  # Check if we have a module (e.g FindX) or a simple script
  if("${script_name}" MATCHES "^Find*")
    set(kind_of_script "modules")
  else()
    set(kind_of_script "function_and_macros")
  endif()

  # Append the current script to `modules` or `function_and_macros` lists. Format them correctly
  # for configuring cmake-modules.rst
  if("${${kind_of_script}}" STREQUAL "")
    set(${kind_of_script} "  /cmake-modules/${script_name}")
  else()
    set(${kind_of_script} "${${kind_of_script}}\n  /cmake-modules/${script_name}")
  endif()

  # Generate the corresponding *.rst file
  file(WRITE "${sphinx_root}/cmake-modules/${script_name}.rst"
"
.. toctree::
   :hidden:
   :maxdepth: 2

.. cmake-module:: ${script_name}.cmake
")
endforeach()

# Configure cmake-modules.rst (we can't use configure file as this would not detect new files
# in the cmake-modules/cmake directory)
file(READ ${sphinx_root}/cmake-modules.rst.in file_content)
string(REPLACE "__function_and_macros__" "${function_and_macros}" file_content ${file_content})
string(REPLACE "__modules__" "${modules}" file_content ${file_content})
file(WRITE ${sphinx_root}/cmake-modules.rst ${file_content})
