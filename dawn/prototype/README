Compiling and running the prototype (until we have a proper setup)

1. Compile Dawn and make sure to switch to the dawn/dawn directory

2. cd <path/to/dawn> && ../build/dawn/test/unit-test/dawn-c/DawnCUnittest --gtest_also_run_disabled_tests && clang-format -i ./prototype/*.hpp
   --> This will run the disabled CodeGenPlayground tests that generated and outputs code

3. For "lukas_lib": cd prototype && g++ mylib[TestCase]Driver.cpp mylib.cpp -o out -std=c++17 -I../../dawn/src; ./out
   --> paraview of_..vtk

4. For atlas: cd prototype && g++ -o out atlas[TestCase]Driver.cpp -std=c++17 -I../../dawn/src -I<path/to/atlas>/include -I<path/to/eckit>/include -L</path/to/atlas>/lib -latlas -L<path/to/eckit>/lib -leckit; ./out
   --> gmsh mymesh.msh

NOTE: TestCase is curently one of [Copy|Diffusion|VerticalSum|Gradient]

For testing the netcdf import:
cd prototype && g++ -o out TestAtlasFromNetcdf.cpp AtlasFromNetcdf.cpp -std=c++17 -I../../dawn/src -I<path/to/atlas>/include -I<path/to/eckit>/include -L</path/to/atlas>/lib -latlas -L<path/to/eckit>/lib -leckit -lnetcdf-cxx4; ./out <mesh.nc>  
--> gmsh earthV(1|2).msh
The above assumes that g++/ld can locate netcdf. If your netcdf location is not in the standard paths you may need to add them with -I / -L (as with atlas)