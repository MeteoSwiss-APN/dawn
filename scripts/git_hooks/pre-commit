#!/usr/bin/env bash
#
# Runs clang-format on changed regions before commit.
#
# To install this, copy it to .git/hooks/pre-commit in your repo.
# Remaining installation checks/instructions will be printed when you commit.
#
# Source: https://gist.github.com/alexeagle/c8ed91b14a407342d9a8e112b5ac7dab
#

# Ensure we use this version of clang-format
clang_format_version=6

read -d '' help <<- EOF
  This repository requires you to install the git clang-format command.

  One-time setup steps:
    1) install the git-clang-format script in your \$PATH. For example:

      curl https://raw.githubusercontent.com/llvm-mirror/clang/master/tools/clang-format/git-clang-format > /usr/local/bin/git-clang-format

    2) make sure git-clang-format is executable:

      chmod u+x /usr/local/bin/git-clang-format

  In each repository where you use clang-format, add git config options
  so that git clang-format finds your version. For example:

      $ git config clangFormat.binary /usr/local/bin/clang-format
      $ git config clangFormat.style file # This is required to detect .clang-format files
EOF

check_clang_format() {
  if ! hash git-clang-format &>/dev/null; then
    echo "SETUP ERROR: no git-clang-format executable found, or it is not executable"
    echo "$help"
    exit 1
  elif [[ $($(git config --get clangFormat.binary) --version | awk '{ print $3 }' | cut -d. -f1) -ne $clang_format_version ]]; then
    echo "SETUP ERROR: We currently require clang-format v6.
Please ensure the correct version is installed by running $(git config --get clangFormat.binary) --version." >&2
    exit 1
  fi
}

check_git_config() {
  if [[ -z "$(git config --get clangFormat.binary)" ]]; then
    echo "SETUP ERROR: git config clangFormat.binary is empty." >&2
    echo "$help"
    exit 1
  elif [[ "$(git config --get clangFormat.style)" != "file" ]]; then
    echo "SETUP ERROR: git config clangFormat.style is wrong." >&2
    echo "$help"
    exit 1
  fi
}

# no_dependency "<of_module>" "<on_module>"
# checks that <of_module> does not depend on <on_module>
# i.e. <of_module> does not include any file from <on_module>
no_dependency() {
  local last_result=`grep -rE "#include .*$2/.*(hpp|h)" dawn/src/dawn/$1 | wc -l`
  if [ "$last_result" -gt 0 ]; then
    echo "ERROR Modularization violated: found dependency of $1 on $2"
    echo "`grep -rE "#include .*$2/.*(hpp|h)" dawn/src/dawn/$1`"
    modularization_result+=1
  fi
}

are_independent() {
  no_dependency "$1" "$2"
  no_dependency "$2" "$1"
}

check_modularization() {
  local modularization_result=0

  # # list of non-dependencies
  no_dependency "Support" "SIR"
  no_dependency "Support" "AST"
  no_dependency "Support" "IIR"
  no_dependency "Support" "CodeGen"
  no_dependency "Support" "Serialization"
  no_dependency "Support" "Optimizer"
  no_dependency "Support" "Compiler"

  no_dependency "AST" "IIR"
  #no_dependency "AST" "SIR"
  no_dependency "AST" "Optimizer"
  no_dependency "AST" "Compiler"
  no_dependency "AST" "Serialization"
  no_dependency "AST" "CodeGen"

  no_dependency "SIR" "Optimizer"
  no_dependency "SIR" "Compiler"
  no_dependency "SIR" "Serialization"
  no_dependency "SIR" "CodeGen"

  no_dependency "IIR" "Optimizer"
  no_dependency "IIR" "Compiler"
  no_dependency "IIR" "Serialization"
  no_dependency "IIR" "CodeGen"

  no_dependency "Serialization" "Compiler"
  no_dependency "Optimizer" "Compiler"
  no_dependency "CodeGen" "Compiler"

  no_dependency "Validator" "Compiler"
  no_dependency "Validator" "CodeGen"
  no_dependency "Validator" "Optimizer"

  are_independent "Serialization" "Optimizer"
  are_independent "Optimizer" "CodeGen"
  #are_independent "SIR" "IIR"
  #are_independent "SIR" "CodeGen"

  if [[ $modularization_result -ne 0 ]]; then
    exit $modularization_result
  fi
}

# List of checks
check_modularization
check_clang_format
check_git_config

readonly out=$(git clang-format -v --diff)

if [[ "$out" == *"no modified files to format"* ]]; then exit 0; fi
if [[ "$out" == *"clang-format did not modify any files"* ]]; then exit 0; fi

echo "ERROR: you need to run git clang-format on your commit"
exit 1
